@page "/categoryList"
@using Core.Dtos.CategoryDto

@inject IHttpClientFactory ClientFactory
@inject NavigationManager navigation
<h3>Category List</h3>

@if (categoryList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categoryList)
            {
            <tr>
                <td>@category.Name</td>
                <td>@category.Id</td>
                <td><button type="submit" class="btn btn-success" value="Urunlere git" @onclick="(()=> ShowProduct(category.Id))">Urunlere git</button></td>
                <td ><button type="submit" class="btn btn-danger" value="Urunlere git" @onclick="(()=> DeleteCategory(category.Id))">Delete</button></td>
                <td><button type="submit" class="btn btn-info" value="Urunlere git" @onclick="(()=> UpdateCategory(category.Id))">Update</button></td>
            </tr>
            }
        </tbody>
    </table>
}

<CategoryCreate></CategoryCreate>

@code {
    public List<CategoryDto> categoryList;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient();
        categoryList = await client.GetFromJsonAsync<List<CategoryDto>>("https://localhost:5001/api/category/getall");

    }
    void ShowProduct(int categoryId)
    {
        navigation.NavigateTo($"categoryProductList/{categoryId}");
    }
    void DeleteCategory(int categoryId)
    {
        var client = ClientFactory.CreateClient();
        client.PostAsJsonAsync($"https://localhost:5001/api/category", categoryId);
    }
    void UpdateCategory(int cateogryId)
        {

        }
}
